using Junk.Math;
using Unity.Entities;
using Unity.Mathematics;
using UnityEngine;

namespace Junk.Transforms.Hybrid
{
    public class BillboardAuthoring : MonoBehaviour, icgte
    {
        public BillboardDirection Direction;
        public bool               SimpleCamera;
        //public bool               VelocityAlignment;

        public enum BillboardDirection
        {
            X,
            Y,
            Z
        }

        public void Convert(Entity entity, EntityManager dstManager, GameObjectConversionSystem conversionSystem)
        {
            
            var dir = maths.up; //default
            dir = math.select(dir, maths.right, Direction == BillboardDirection.X);
            dir = math.select(dir, maths.up, Direction == BillboardDirection.Y);
            dir = math.select(dir, maths.forward, Direction == BillboardDirection.Z);
            
            // convert axis to bool3
            var axis = new bool3(dir.x != 0, dir.y != 0, dir.z != 0);
            AddComponent(entity, new Billboard { Axis = axis });
            
            if(SimpleCamera) 
                dstManager.AddComponent<BillboardSimple>(entity);
        }
    }


}